{"version":3,"sources":["components/input/input.container.js","store/input/actions.js","components/input/input.component.js","components/app/app.component.js","store/input/reducers.js","store/reducers.js","store/make-store.js","index.js"],"names":["mapDispatchToProps","resetInputValue","type","payload","setInputValue","value","connect","store","input","inputRef","React","createRef","className","placeholder","ref","onChange","e","target","onClick","current","focus","initialState","combineReducers","state","action","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"uPAYMA,EAAqB,CACzBC,gBCH6B,WAC7B,MAAO,CACLC,KAZ6B,oBAa7BC,QAAS,KDCXC,cCX2B,SAACC,GAC5B,MAAO,CACLH,KAJ2B,kBAK3BC,QAASE,KDWEC,eAXS,SAACC,GACvB,MAAO,CACLF,MAAOE,EAAMC,MAAMH,SASiBL,EAAzBM,EEdA,YAAgD,IAA7CL,EAA4C,EAA5CA,gBAAiBG,EAA2B,EAA3BA,cAAeC,EAAY,EAAZA,MAC1CI,EAAWC,IAAMC,YAMvB,OACE,oCACE,8BACEC,UAAU,+BACVC,YAAY,sBACZC,IAAKL,EACLJ,MAAOA,EACPU,SAAU,SAACC,GAAQZ,EAAcY,EAAEC,OAAOZ,UAE5C,yBAAKO,UAAU,WACb,4BAAQA,UAAU,OAAlB,YACA,4BACEA,UAAU,MACVM,QAAS,WACPjB,IAjBRQ,EAASU,QAAQC,UAcb,cClBO,aACb,OACE,yBAAKR,UAAU,6BACb,kBAAC,EAAD,Q,cCJAS,EAAe,CACnBhB,MAAO,ICAMiB,cAAgB,CAC7Bd,MDEa,WAAmC,IAAlCe,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC/C,OAAQA,EAAOtB,MACb,IHR6B,oBGc7B,IHb2B,kBGczB,OAAO,2BACFqB,GADL,IAEElB,MAAOmB,EAAOrB,UAGlB,QACE,OAAOoB,MElBAhB,EAAQkB,YAAYC,G,MCIjCC,IAASC,OACP,kBAAC,IAAD,CAAUrB,MAAOA,GACf,kBAAC,EAAD,MADF,KAGAsB,SAASC,eAAe,W","file":"static/js/main.69adc132.chunk.js","sourcesContent":["import Input from './input.component';\r\nimport { resetInputValue, setInputValue } from './../../store/input/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    value: store.input.value,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  resetInputValue,\r\n  setInputValue,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);","export const RESET_INPUT_VALUE = 'RESET_INPUT_VALUE';\r\nexport const SET_INPUT_VALUE = 'SET_INPUT_VALUE';\r\n\r\nexport const setInputValue = (value) => {\r\n  return {\r\n    type: SET_INPUT_VALUE,\r\n    payload: value,\r\n  }\r\n};\r\n\r\nexport const resetInputValue = () => {\r\n  return {\r\n    type: RESET_INPUT_VALUE,\r\n    payload: '',\r\n  }\r\n};","import React from 'react';\r\nimport './../../styles/input.scss';\r\n\r\nexport default ({ resetInputValue, setInputValue, value }) => {\r\n  const inputRef = React.createRef();\r\n\r\n  const handleInputFocus = () => {\r\n    inputRef.current.focus();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        className=\"textarea container__textarea\"\r\n        placeholder=\"Enter assignment...\"\r\n        ref={inputRef}\r\n        value={value}\r\n        onChange={(e) => { setInputValue(e.target.value) }}>\r\n      </textarea>\r\n      <div className=\"buttons\">\r\n        <button className=\"btn\">Add note</button>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            resetInputValue();\r\n            handleInputFocus();\r\n          }\r\n          }\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};","import React from 'react';\r\nimport Input from './../input/input.container';\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"container body__container\">\r\n      <Input />\r\n    </div>\r\n  );\r\n};\r\n","import { RESET_INPUT_VALUE, SET_INPUT_VALUE } from './actions';\r\n\r\nconst initialState = {\r\n  value: '',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case RESET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n      }\r\n\r\n    case SET_INPUT_VALUE:\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport inputReducer from './input/reducers';\r\n\r\nexport default combineReducers({\r\n  input: inputReducer,\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app.component';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/make-store';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />,\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}